Network loadbalancer
The difference between application loadbalancer and network loadbalancer are described below
1. 
#Application Loadbalancer
An application loadbalancer will not be assigned within an elastic public ip address, the aws generates an dns name and assigns to the Application loadbalancer using which we need to access it.
	
#Network Loadbalancer
By default Network loadbalancer also will not be assigned with elastic ip address, aws assigns only dns name. If we want to we can attach an elastic ipaddress for an Network loadbalancer

2. 
#Application Loadbalancer
It only listens for http/https protocol traffic only, and it supports configuring routes based on http
- path
- hostname
- header
- http method
- query parameter
in routing and loadbalancing the requests across the instances of the application

#Network Loadbalancer
Network loadbalancer listens for tcp, udp or any other protocol in receiving and routing the requests. The only way through which we can route the requests across the instances is based on protocol/port no. It is ideally suitable for back-end or non-http based applications

3.
#Application Loadbalancer
The Application loadbalancer supports healthchecks, we need to configure application health endpoint in the Loadbalancer, so that is periodically access the endpoint to get the realtime availability of the application, so that it route the requests only to the active nodes

#Network Loadbalancer
Network loadbalancer also supports healthchecks, but it only check whether the ec2 instance is up or not by sending the ping requests to the instance. So it dont know the actual/realtime status of the application, due to which even though the application is down still it routes the requests to the Node (as node is available)
------------------------------------------------------------------------------------------------------------------------
	
	




















